<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Javascript on Xan&#39;s Blog</title>
    <link>https://xancoding.github.io/tags/javascript/</link>
    <description>Recent content in Javascript on Xan&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 12 Oct 2022 22:06:12 +0800</lastBuildDate><atom:link href="https://xancoding.github.io/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>JS简易游戏引擎实现</title>
      <link>https://xancoding.github.io/posts/acgameproject/</link>
      <pubDate>Wed, 12 Oct 2022 22:06:12 +0800</pubDate>
      
      <guid>https://xancoding.github.io/posts/acgameproject/</guid>
      <description>&lt;h1 id=&#34;简易游戏引擎实现acgameobject&#34;&gt;简易游戏引擎实现（AcGameObject）&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;let&lt;/span&gt; last_timestp; &lt;span style=&#34;color:#007f7f&#34;&gt;// 上一帧的时间
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007f7f&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;let&lt;/span&gt; AC_GAME_ANIMATION = &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;function&lt;/span&gt;(timestp) &lt;span style=&#34;color:#007f7f&#34;&gt;// timestp 是传入的一个参数，就是当前调用的时间
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007f7f&#34;&gt;&lt;/span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;let&lt;/span&gt; i = &lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;0&lt;/span&gt;; i &amp;lt; AC_GAME_OBJECTS.length; ++ i) &lt;span style=&#34;color:#007f7f&#34;&gt;// 所有动的元素都进行更新。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007f7f&#34;&gt;&lt;/span&gt;    {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;let&lt;/span&gt; obj = AC_GAME_OBJECTS[i];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;if&lt;/span&gt; (!obj.has_called_start)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            obj.start(); &lt;span style=&#34;color:#007f7f&#34;&gt;// 调用start()
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007f7f&#34;&gt;&lt;/span&gt;            obj.has_called_start = &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;true&lt;/span&gt;; &lt;span style=&#34;color:#007f7f&#34;&gt;// 表示已经调用过start()了
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007f7f&#34;&gt;&lt;/span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            obj.timedelta = timestp - last_timestp; &lt;span style=&#34;color:#007f7f&#34;&gt;// 时间微分
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007f7f&#34;&gt;&lt;/span&gt;            obj.update(); &lt;span style=&#34;color:#007f7f&#34;&gt;// 不断调用
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007f7f&#34;&gt;&lt;/span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    last_timestp = timestp; &lt;span style=&#34;color:#007f7f&#34;&gt;// 进入下一帧时当前时间戳就是这一帧的时间戳
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007f7f&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    requestAnimationFrame(AC_GAME_ANIMATION); &lt;span style=&#34;color:#007f7f&#34;&gt;// 不断递归调用
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007f7f&#34;&gt;&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;requestAnimationFrame(AC_GAME_ANIMATION); &lt;span style=&#34;color:#007f7f&#34;&gt;// JS的API，可以调用1帧里面的函数。(有些浏览器的一秒帧数不一定相等)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
      <content:encoded><![CDATA[<h1 id="简易游戏引擎实现acgameobject">简易游戏引擎实现（AcGameObject）</h1>
<div class="highlight"><pre tabindex="0" style="color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-js" data-lang="js"><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#fff;font-weight:bold">let</span> last_timestp; <span style="color:#007f7f">// 上一帧的时间
</span></span></span><span style="display:flex;"><span><span style="color:#007f7f"></span><span style="color:#fff;font-weight:bold">let</span> AC_GAME_ANIMATION = <span style="color:#fff;font-weight:bold">function</span>(timestp) <span style="color:#007f7f">// timestp 是传入的一个参数，就是当前调用的时间
</span></span></span><span style="display:flex;"><span><span style="color:#007f7f"></span>{
</span></span><span style="display:flex;"><span>    <span style="color:#fff;font-weight:bold">for</span> (<span style="color:#fff;font-weight:bold">let</span> i = <span style="color:#ff0;font-weight:bold">0</span>; i &lt; AC_GAME_OBJECTS.length; ++ i) <span style="color:#007f7f">// 所有动的元素都进行更新。
</span></span></span><span style="display:flex;"><span><span style="color:#007f7f"></span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#fff;font-weight:bold">let</span> obj = AC_GAME_OBJECTS[i];
</span></span><span style="display:flex;"><span>        <span style="color:#fff;font-weight:bold">if</span> (!obj.has_called_start)
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            obj.start(); <span style="color:#007f7f">// 调用start()
</span></span></span><span style="display:flex;"><span><span style="color:#007f7f"></span>            obj.has_called_start = <span style="color:#fff;font-weight:bold">true</span>; <span style="color:#007f7f">// 表示已经调用过start()了
</span></span></span><span style="display:flex;"><span><span style="color:#007f7f"></span>        }
</span></span><span style="display:flex;"><span>        <span style="color:#fff;font-weight:bold">else</span>
</span></span><span style="display:flex;"><span>        {
</span></span><span style="display:flex;"><span>            obj.timedelta = timestp - last_timestp; <span style="color:#007f7f">// 时间微分
</span></span></span><span style="display:flex;"><span><span style="color:#007f7f"></span>            obj.update(); <span style="color:#007f7f">// 不断调用
</span></span></span><span style="display:flex;"><span><span style="color:#007f7f"></span>        }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>    last_timestp = timestp; <span style="color:#007f7f">// 进入下一帧时当前时间戳就是这一帧的时间戳
</span></span></span><span style="display:flex;"><span><span style="color:#007f7f"></span>
</span></span><span style="display:flex;"><span>    requestAnimationFrame(AC_GAME_ANIMATION); <span style="color:#007f7f">// 不断递归调用
</span></span></span><span style="display:flex;"><span><span style="color:#007f7f"></span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>requestAnimationFrame(AC_GAME_ANIMATION); <span style="color:#007f7f">// JS的API，可以调用1帧里面的函数。(有些浏览器的一秒帧数不一定相等)
</span></span></span></code></pre></div>]]></content:encoded>
    </item>
    
  </channel>
</rss>
